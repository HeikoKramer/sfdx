###----------------------------------------------------###
### CONFIG FILE FOR SFDX RELATED ALIASES AND FUNCTIONS ###
###----------------------------------------------------###

### ALIASES ###
alias orgs='sfdx force:org:list --all' #show list of all authenticated orgs

### FUNCTIONS ###
# open org
# oo [alias] or [username]
# function to open a prior authenticated org in default browser
function oo {
  sfdx force:org:open -u $1
}

# authenticate org
# ao [alias] [myDomain]
# function to authenticated an org with a my domain
function ao {
  read -p 'Enter alias for the org you would like to authenticate: ' alias;
  read -p 'Enter myDomain (only middle part) of the org: ' myDomain;
  sfdx force:auth:web:login -a $alias --instanceurl https://$myDomain.my.salesforce.com;
}

# logout org
# lo [alias]
# function to remove (logout) a priot authenticated org 
function lo {
  read -p 'Enter alias for the org you would like remove: ' alias;
  sfdx force:auth:logout -u $alias;
}

# corgs â€“ compare orgs
# Retrieve custom fields metadata from two orgs (full/prod || dev/full || dev/dev) and compare differences
# Orgs must already been authorised with sfdx. !! Function will create files in working directory !!
# Prerequisites: jq needs to be installed, colordiff needs to be installed
# colordiff is optional. Change to "diff" if you don't want to install it
function corgs {
    # ask for login user for org1 and org2
    read -p 'Enter UserName of org1: ' userNameOrg1;
    read -p 'Enter UserName of org2: ' userNameOrg2;

    # org1: retrieve custom fields, parse api names, sort, create text file
    sfdx force:mdapi:listmetadata -m CustomField -u "$userNameOrg1" -f customFieldsOrg1.txt;
    customFieldApiNamesOrg1=$(cat customFieldsOrg1.txt|jq '.[].fullName');
    echo $customFieldApiNamesOrg1 | tr ' ' '\n' | sort | sed 's/\"//g' > $userNameOrg1.txt;
    rm customFieldsOrg1.txt;

    # org2: retrieve custom fields, parse api names, sort, create text file
    sfdx force:mdapi:listmetadata -m CustomField -u "$userNameOrg2" -f customFieldsOrg2.txt;
    customFieldApiNamesOrg2=$(cat customFieldsOrg2.txt|jq '.[].fullName');
    echo $customFieldApiNamesOrg2 | tr ' ' '\n' | sort | sed 's/\"//g' > $userNameOrg2.txt;
    rm customFieldsOrg2.txt;

    # compare org1 & org2 files, display colored differences in terminal,
    # create added/removed fields report and open it
    diff -u  $userNameOrg1.txt $userNameOrg2.txt > comp.txt;
    echo "REMOVED FIELDS:" > plus_minus_report.txt;
    grep ^- comp.txt >> plus_minus_report.txt;
    echo "ADDED FIELDS:" >> plus_minus_report.txt;
    grep ^+ comp.txt >> plus_minus_report.txt;
    colordiff -u $userNameOrg1.txt $userNameOrg2.txt;
}
export -f corgs
